[["index.html", "Publicando um e-book com o bookdown Capítulo 1 O pacote bookdown 1.1 Preparativos iniciais 1.2 Escrevendo um e-book", " Publicando um e-book com o bookdown João B. Tolentino Jr. 2022-11-09 Capítulo 1 O pacote bookdown O pacote bookdown, de autoria de Yihui Xie, combina a simplicidade da linguagem R Markdown com as funcionalidades do (Pandoc)[https://pandoc.org/]. Segundo o autor, sua utilização é adequada para escrever livros, artigos longos ou informes, sendo as principais funcionalidades: numeração automáticas de equações, teoremas, figuras, tabelas, etc e referências cruzadas destas. gerar múltiplos formatos de saída, como HTML, PDF, EPUB. E tudo isso com um visual, no mínimo, agradável. O principal estilo é o GitBook. 1.1 Preparativos iniciais O pacote bookdown pode ser instalado do CRAN ou Github: Code install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) A documentação completa pode ser encontrada em bookdown: Authoring Books and Technical Documents with R Markdown (em inglês) Além disso, você vai precisar do R RStudio (versão &gt; 1.0.0) Para compilar em PDF, você precisa do XeLaTeX, que pode ser encontrado junto com o pacote TinyTeX (https://yihui.org/tinytex/). Um exemplo pode ser encontrado em https://github.com/rstudio/bookdown-demo/ ou para um exemplo mínimo, https://github.com/yihui/bookdown-minimal/. 1.2 Escrevendo um e-book Um e-book típico contém vários capítulos. Cada arquivo Rmd deve conter um e apenas um capítulo, definido por um título de primeiro nível #. index.Rmd # Prefácio {-} 01.intro.Rmd # Introdução {#intro} Aqui está uma breve apresentação deste e-book. 02.revisao.Rmd # Revisão de literatura {#revisao} Aqui está uma revisão do assunto. ## Assunto 1 {#a2} ## Assunto 2 {#a2} Os arquivos de configuração são escritos na linguagem YAML (https://pt.wikipedia.org/wiki/YAML). São eles: _bookdown.yml (Seção: O arquivo _bookdown.yml), _output.yml (Seção: O arquivo _output.yml). Além disso, mais configurações são adicionadas ao cabeçalho do primeiro arquivo Rmd (index.Rmd) (Seção: O arquivo index.Rmd). "],["bkd.html", "Capítulo 2 O arquivo _bookdown.yml", " Capítulo 2 O arquivo _bookdown.yml Este é um exemplo do conteúdo do arquivo _bookdown.yml: book_filename: &quot;ebook&quot; delete_merged_file: true before_chapter_script: rm.R after_chapter_script: edit: https://github.com/joaobtj/curso-bookdownbr/edit/main/%s view: https://github.com/joaobtj/curso-bookdownbr/blob/main/%s output_dir: _book language: label: fig: &#39;Figura &#39; tab: &#39;Tabela &#39; eq: &#39;Equação &#39; thm: &#39;Teorema &#39; lem: &#39;Lema &#39; cor: &#39;Corolário &#39; prp: &#39;Proposição &#39; cnj: &#39;Conjetura &#39; def: &#39;Definição &#39; exm: &#39;Exemple &#39; exr: &#39;Exercício &#39; hyp: &#39;Hipótese &#39; proof: &#39;Prova &#39; remark: &#39;Observação &#39; solution: &#39;Solução &#39; ui: edit: &#39;Editar &#39; chapter_name: &#39;Capítulo &#39; appendix_name: &#39;Apêndice &#39; book_filename: nome do arquivo gerado (Rmd, PDF, ePub, etc) delete_merged_file: deleta o arquivo Rmd depois de livro ser renderizado com sucesso before_chapter_script and after_chapter_script: um ou mais scripts em R a serem executados antes (before) ou depois (after) de cada capítulo. edit: um link para colaboradores poderem editar o arquivo fonte do documento. Comumente é um repositório Git (GitHub ou GitLab). O link deve finalizar com %s. view: semelhante ao edit, um link para visualizar o arquivo fonte. output_dir: diretório onde será renderizado o livro. Veja mais no Capítulo 5.3. new_session: usar uma sessão nova do R ara compilar cada arquivo Rmd individualmente. language: permite a tradução de termos para o idioma desejado. Muito cuidado com a indentação na formatação do arquivo. Cada nível deve ser iniciado com 2 espaços, por exemplo, language inicia na margem esquerda do arquivo. label inicia a dois espaços da mergem. fig inicia a 4 espaços da margem (dois a mais que label). Figura 2.1: Exemplo de indentação no arquivo _bookdown.yml. "],["output.html", "Capítulo 3 O arquivo _output.yml", " Capítulo 3 O arquivo _output.yml Este é um exemplo do conteúdo do arquivo _output.yml bookdown::gitbook: #https://bookdown.org/yihui/bookdown/html.html#gitbook-style css: style.css #arquivo .css split_by: chapter #rmd, none, chapter, section, chapter+number, section+number split_bib: yes #yes: adiciona as referências em cada página includes: in_header: ga.html #incluir códigos no HEAD do html, por exemplo, google analytics config: toc: collapse: none #subsection, section, none scroll_highlight: yes before: | &lt;li&gt;&lt;a href=&quot;./&quot;&gt;Exemplo mínimo de um e-book&lt;/a&gt;&lt;/li&gt; after: | &lt;li&gt;&lt;a href=&quot;https://github.com/rstudio/bookdown&quot; target=&quot;blank&quot;&gt;Publicado com bookdown&lt;/a&gt;&lt;/li&gt; toolbar: position: fixed #fixed, static search: yes fontsettings: theme: white #white, night, sepia family: serif #sans, serif size: 2 #1 a 4 download: null sharing: whatsapp: yes facebook: yes twitter: yes linkedin: no weibo: no instapaper: no vk: no all: [&#39;whatsapp&#39;, &#39;facebook&#39;, &#39;twitter&#39;, &#39;linkedin&#39;] info: yes Para a saída GitBook (bookdown::gitbook), algumas das configurações são as seguintes: css: para fornecer um ou mais arquivos CSS personalizados. split_by: especifica como dividir e nomear os arquivos HTML em múltiplas páginas. As opções são: rmd: cada arquivo Rmd cria um arquivo HTML. none: não separa o arquivo, ou seja, o livro todo está contido em um único HTML. chapter: separa para cada cabeçalho de primeiro nível. section: separa para cada cabeçalho de segundo nível. chapter+number and section+number: similar a chapter e section, mas os arquivos são numerados. split_bib: se split_bib = true adiciona as referências ao final de cada página. Caso split_bib = false, as referências são colocadas em uma página dedicada no final. includes: possibilita incluir um código HTML no arquivo de saída. Uma opção comum é incluir o código do Google Analytics (veja mais em Google Analytics no Bookdown). As opções dentro de includes são in_header, before_body e after_body. As opções indentadas dentro de config são: toc: controla o sumário (table of contents), que aparece no lado direiro da tela. collapse: controla o desdobramento inicial do sumário. Os valores possíveis são: subsection, que desdobra o sumário até o segundo nível, section que desdobra o sumário até o primeiro nível e none que não desdobra. scroll_highlight: se true, destaca o item atual do sumário enquanto você rola a página. before and after: adiciona itens antes e/ou depois do sumário. A tag &lt;li&gt; separa os itens do sumário. O caracter | toolbar: controla o comportamento da barra superior. position: os valores podem ser fixed, que fixa a barra superior e ela estará sempre visível mesmo quando a página é rolada, ou static, que não rola a barra junto com a página, ou seja, ela não ficará mais visível conforme a página é rolada. search: se true, adiciona um botão de busca na barra superior. fontsettings: ajusta os valores iniciais para o tema e fonte. Para desativar, ajuste o valor para null. theme: os valores são white para um tema claro, night para um tema escuro e sepia para um tema com efeito envelhecido. family: serif para uma fonte serifada (O que é uma fonte serifada?) ou sans para uma fonte não serifada. size: tamanho da fonte, entre 1 e 4 info: botão de informação que lista os atalhos do teclado. Para desativar, definir como false. sharing: Adiciona botões para compartilhamento em redes sociais. Para desativar, definir como null. whatsapp: se definido como true, um botão para compartilhar a página no whatsapp irá aparecer na barra superior. Outras opções de redes sociais são: facebook, twitter, linkedin, weibo, instapaper, vk. all: opções que irão aparacer no menu dropdown de compartilhamento. Mais configurações podem ser encontradas na ajuda das funções bookdown::gitbooke rmarkdown::html_document number_sections: TRUE to number section headings global_numbering: If TRUE, number figures and tables globally throughout a document (e.g., Figure 1, Figure 2, …). If FALSE, number them sequentially within sections (e.g., Figure 1.1, Figure 1.2, …, Figure 5.1, Figure 5.2, …). Note that global_numbering = FALSE will not work with number_sections = FALSE because sections are not numbered. code_folding: Enable document readers to toggle the display of R code chunks. Specify “none” to display all code chunks. Specify “hide” or “show” to hide or show all R code chunks by default, and let readers toggle the states on browsers. See the Code folding toc_depth: Depth of headers to include in table of contents. "],["index0.html", "Capítulo 4 O arquivo index.Rmd", " Capítulo 4 O arquivo index.Rmd Este é o cabeçalho YAML do arquivo index.Rmd --- title: &quot;Publicando e-book com o bookdown&quot; author: &quot;João B. Tolentino Jr.&quot; date: &quot;2022-11-09&quot; description: &quot;Este é um exemplo de um livro publicado com o pacote **bookdown** no formato *gitbook*&quot; cover-image: image/cover.jpg apple-touch-icon: image/cover.jpg favicon: image/favicon.ico url: &#39;https\\://curso-bookdown.tolentino.pro.br&#39; site: bookdown::bookdown_site documentclass: book bibliography: [book.bib, packages.bib] biblio-style: apalike link-citations: true --- title: título do e-book. author: nome do(s) autor(es) do e-book date: data de publicação. Para buscar automaticamente data em qe=ue foi feita a última modificação, use a função Sys.Date() description: um descrição sucinta utilizada pelos buscadores (SEO) cover-image: uma imagem de capa para o e-book que irá aparecer quando compartilhar o link nas redes sociais. apple-touch-icon: para IOS, o ícone quando o website é adiconada na tela inicial favicon: ícone mostrado na barra de endereços ou nas abas do navegador. url: a url do website do e-book. Atenção para a barra esquerda que deve ser adicionada antes de dois pontos do endereço. site: para renderizar o e-book no RStudio, clicando no botão Knit (ou Ctrl+Shift+K), definir a opção como bookdown::bookdown_site. documentclass: definir como book. bibliography: arquivos que contém a bibliografia, no formato *.bib biblio-style: estilo das citações. link-citation: definir como true para as citações também serem links. "],["publicar.html", "Capítulo 5 Publicar o e-book 5.1 RStudio Connect 5.2 Netlify Drop 5.3 GitHub Pages", " Capítulo 5 Publicar o e-book Após finalizar a escrita do conteúdo, é necessário renderizá-lo para que seja possível publicá-lo. A renderização é feita pelo comando bookdown::render_book() com os formatos especificados no arquivo _output.yml1. Outra opção é o atalho do teclado Ctrl+Shift+B. O e-book renderizado pode ser publicado em qualquer local que você desejar. Por exemplo, você pode hospedar os arquivos HTML em seu próprio servidor web. Abaixo, algumas opções. 5.1 RStudio Connect Uma das opções mais fáceis para publicar seu livro é utilizar o serviço RStudio Connect. O livro estará no domínio https://bookdown.org, que foi criado para hospedar os livros gratuitamente. Inicialmente, voce deve criar uma conta em https://bookdown.org/connect/. Em seguida, execute o comando bookdown::publish_book() e será solicitado autorização para publicar em bookdown.org 2 Está feito! O livro está publicado, mas ainda devem ser feitas algumas configurações no site do RStudio Connect. Umas delas está relacionada à publicidade. Originalmente, o livro é publicado em modo privado, ou seja, apenas o autor pode visualizar. Para torná-lo píblico, altere para a opção Acces -&gt; Sharing settings -&gt; Anyone - no login required. Caso seja feita alguma atualização no conteúdo, basta executar novamente o comando bookdown::publish_book(). 5.2 Netlify Drop A plataforma https://netlify.com oferece hospedagem gratuita para sites estáticos. Para publicar nesta plataforma, basta arrastar (drop) o diretório do livro renderizado localmente para dentro do site https://app.netlify.com/drop. Caso seja feita alguma atualização, é preciso arrastar novamente a pasta renderizada para dentro do site. 5.3 GitHub Pages Se você utiliza o serviço do GitHub para trabalhar em equipe, uma opção é o serviço GitHub Pages. Após iniciar o projeto no RStudio, conecte com o GitHub pelos comandos usethis::use_git() e usethis::use_github() Use o GitHUb Actions para atualizar o site sempre que um commit for enviado. usethis::use_github_action(\"bookdown\") Também é necessário usar o renv para gerenciar os pacotes. Para finalizar, basta configurar a aba Settings -&gt; Pages veja o Capítulo 3↩︎ A autorização é necessária apenas na primeira utilização.↩︎ "],["404.html", "", " Página não encontrada"]]
